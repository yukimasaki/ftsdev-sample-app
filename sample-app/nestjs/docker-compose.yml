version: "3"

volumes:
  postgres_data:
      driver: local

services:
  redis:
    container_name: redis
    networks:
      default:
      reverse-proxy-network:
        aliases:
          - redis-container
    image: "redis:latest"
    ports:
      - "6379:6379"
    volumes:
      - "./redis-data:/data"
    restart: always

  postgres:
    container_name: postgres
    networks:
      default:
      reverse-proxy-network:
        aliases:
          - postgres-container
    image: postgres:15.3-alpine
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    tty: true
    restart: always

  pgadmin:
    networks:
      default:
      reverse-proxy-network:
        aliases:
          - pgadmin-container
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    ports:
      - "8000:80"
    volumes:
      - ./docker/pgadmin:/var/lib/pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: password
    hostname: pgadmin
    depends_on:
      - postgres
    restart: always

  nestjs:
    container_name: nestjs
    networks:
      default:
      reverse-proxy-network:
        aliases:
          - nestjs-container
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - "3030:3000"
      - "5555:5555"
    volumes:
      - ./:/work
    tty: true
    restart: always

networks:
  reverse-proxy-network:
    external: true
